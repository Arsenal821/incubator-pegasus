api_version: v1
kind: ms_modules
metadata:
  name: skv
spec:
  source_type:   #可以理解为 “skv_offline” & “skv_online” 是 source_type "skv" 的两个module实例
    skv:
      shim_dir: skv_shim
      guidance_dir: skv_guidance
      script_path: ARMADA_PYTHON  #ARMADA_PYTHON / MOTHERSHIP_PYTHON
      roles:    #支持的角色
        meta_server:
          deploy:
            available_in_cluster: True  # 集群(非单机)是否部署
            available_in_simplified_cluster: True  # 单机是否部署, 可部署则不考虑 replicas
          support_command:
            - START
            - STOP
            - STATUS
            - INSTALL
            - PREPARE_NON_ROLLING_UPGRADE
            - FINALIZE_NON_ROLLING_UPGRADE
          scale_up:
            support: False  # 必填，表示该 role 支持扩容
          scale_down:
            support: False  # 必填，表示该 role 支持扩容
        replica_server:
          deploy:
            available_in_cluster: True  # 集群(非单机)是否部署
            available_in_simplified_cluster: True  # 单机是否部署, 可部署则不考虑 replicas
          dependency_roles:  # replica_server 依赖 meta_server
            - meta_server
          support_command:
            - START
            - STOP
            - STATUS
            - INSTALL
            - PREPARE_NON_ROLLING_UPGRADE
            - FINALIZE_NON_ROLLING_UPGRADE
          scale_up:
            support: True  # 必填，表示该 role 支持扩容
            callbacks:
              - callback: PRE_SCALE_UP_CHECK
                target_node: scale_node  # 可填 all_node || single_node || scale_node，填写 scale_node 表示在所有扩缩容机器上执行               
              - callback: PRE_SCALE_UP_START
                target_role: replica_server  # target_role 选填，不填表示所有机器上均可执行，当填写指定角色时，表示只在部署该角色的机器上执行
                target_node: single_node  # target_node 必填，候选值 all_node || single_node，填写 all_node 表示所有符合部署的机器上都执行
              - callback: POST_SCALE_UP_START
                target_role: replica_server  # target_role 的候选值是 source_type 中声明的角色名
                target_node: single_node
              - callback: POST_SCALE_UP_CHECK
                target_role: replica_server
                target_node: single_node  # 可填 all_node || single_node || scale_node，填写 single_node 表示在符合部署的机器上随机一台机器执行
          scale_down:
            support: True  # 必填，表示该 role 支持缩容
            callbacks:
              - callback: PRE_SCALE_DOWN_CHECK
                target_node: scale_node  # 可填 all_node || single_node || scale_node，填写 scale_node 表示在所有扩缩容机器上执行               
              - callback: DECOMMISSION_CALLBACK
                target_role: replica_server  # target_role 选填，不填表示所有机器上均可执行，当填写指定角色时，表示只在部署该角色的机器上执行
                target_node: single_node  # target_node 必填，候选值 all_node || single_node，填写 all_node 表示所有符合部署的机器上都执行
              - callback: DECOMMISSION_COMPLETE_INSPECTION
                target_node: single_node
              - callback: POST_SCALE_DOWN_STOP
                target_role: replica_server  # target_role 的候选值是 source_type 中声明的角色名
                target_node: single_node
              - callback: POST_SCALE_DOWN_CHECK
                target_role: replica_server
                target_node: single_node  # 可填 all_node || single_node || scale_node，填写 single_node 表示在符合部署的机器上随机一台机器执行
  modules:
    skv_offline:
      source_type: skv
      user: sa_cluster
      user_groups:
        - sa_group
      dependency_modules:
        - zookeeper
      captain_module_conf:
        containerized: False
        strategy:
          detached: False  # False 是需要captain监控； True 则是不需要captain监控
      roles:
        meta_server:
          role_group: meta
          hardware_requirements:
            - meta_dir
          # 是否支持缩容
          support_scale_down: False
          # 是否跟随机器扩容自动进行扩容
          auto_scale_up_by_host_scale_up: False
          ports:
            server_port:
              port: 8170
              description: 'server port'
          captain_role_conf:
            strategy:
              detached: False
              repairable: True
              restart_all_role: False
              restart_module: False
              replicas: 3   # 实例数量， 这里meta server 以前在sp安装的配置应该是1-3个实例
              rolling: -1   #重启是否滚动， -1 是不滚动
              service_continuouse_level: True
              liveness_probe:
                method:
                  port:
                    process_keyword: meta
                    port: 8170
                period: 10 # 探活间隔
                retry_interval: 1  #每次探活，若失败， 立即重试， 这里是重试之间的时间间隔
                timeout: 10 # 探活超时时间
                retry_times: 3 #每次探活，若失败， 立即重试的次数
              start:
                retry_interval: 0
                retry_times: 1
                timeout: 20
              stop:
                mode: term_by_port
                retry_interval: 0
                retry_times: 1
                timeout: 20
            deploy:
              stateful: True
              mutual_role: False

        replica_server:
          role_group: store
          hardware_requirements:
            - random_dir
            - mem
          support_scale_down: True
          auto_scale_up_by_host_scale_up: True
          ports:
            server_port:
              port: 8171
              description: 'server port'
          captain_role_conf:
            strategy:
              detached: False
              repairable: True
              restart_all_role: False
              restart_module: False
              replicas: -1   # 这里-1 代表无实例限制
              rolling: -1
              service_continuouse_level: True
              liveness_probe:
                method:
                  port:
                    process_keyword: replica
                    port: 8171
                period: 60
                retry_interval: 1
                timeout: 10
                retry_times: 3
              start:
                retry_interval: 0
                retry_times: 1
                timeout: 20
              stop:
                mode: term_by_port
                retry_interval: 0
                retry_times: 1
                timeout: 20
            deploy:
              stateful: True
              mutual_role: False

    skv_online:
      source_type: skv
      user: sa_cluster
      user_groups:
        - sa_group
      dependency_modules:
        - zookeeper
      captain_module_conf:
        containerized: False
        strategy:
          detached: False  # False 是需要captain监控； True 则是不需要captain监控
      roles:
        meta_server:
          role_group: online
          hardware_requirements:
            - online_random_dir
          # 是否支持缩容
          support_scale_down: False
          # 是否跟随机器扩容自动进行扩容
          auto_scale_up_by_host_scale_up: False
          ports:
            server_port:
              port: 8160
              description: 'server port'
          captain_role_conf:
            strategy:
              detached: False
              repairable: True
              restart_all_role: False
              restart_module: False
              replicas: 3   # 实例数量， 这里meta server 以前在sp安装的配置应该是1-3个实例
              rolling: -1   #重启是否滚动， -1 是不滚动
              service_continuouse_level: True
              liveness_probe:
                method:
                  port:
                    process_keyword: meta
                    port: 8160
                period: 10 # 探活间隔
                retry_interval: 1  #每次探活，若失败， 立即重试， 这里是重试之间的时间间隔
                timeout: 10 # 探活超时时间
                retry_times: 3 #每次探活，若失败， 立即重试的次数
              start:
                retry_interval: 0
                retry_times: 1
                timeout: 20
              stop:
                mode: term_by_port
                retry_interval: 0
                retry_times: 1
                timeout: 20
            deploy:
              stateful: True
              mutual_role: False

        replica_server:
          role_group: online
          hardware_requirements:
            - online_random_dir
            - mem
          support_scale_down: True
          auto_scale_up_by_host_scale_up: True
          ports:
            server_port:
              port: 8161
              description: 'server port'
          captain_role_conf:
            strategy:
              detached: False
              repairable: True
              restart_all_role: False
              restart_module: False
              replicas: -1   # 这里-1 代表无实例限制
              rolling: -1
              service_continuouse_level: True
              liveness_probe:
                method:
                  port:
                    process_keyword: replica
                    port: 8161
                period: 60
                retry_interval: 1
                timeout: 10
                retry_times: 3
              start:
                retry_interval: 0
                retry_times: 1
                timeout: 20
              stop:
                mode: term_by_port
                retry_interval: 0
                retry_times: 1
                timeout: 20
            deploy:
              stateful: True
              mutual_role: False
